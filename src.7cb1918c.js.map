{"version":3,"sources":["config.json","index.js"],"names":["module","exports","starRadius","firstStarColor","lastStarColor","starColor","canvas","document","querySelector","randomPosition","position","width","height","parseInt","Math","random","documentElement","clientWidth","config","clientHeight","resizeCanvas","style","backgroundColor","window","addEventListener","circle","getContext","isFirst","starsArr","createDots","amount","obj","color","beginPath","arc","PI","fillStyle","fill","average","isUsed","push","lines","createLines","newArr","shortestWayArr","newCoordinate","now","undefined","console","log","indexOf","some","i","length","abs","moveTo","lineTo","stroke"],"mappings":";;;AAAAA,OAAOC,QAAQ,CAACC,WAAW,EAAEC,eAAe,MAAMC,cAAc,UAAUC,UAAU;;AC8FpF,aA9FA,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,kBA6FA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GA3FA,MAAMC,EAASC,SAASC,cAAc,WAGtC,SAASC,IACDC,MAAAA,EAAW,CACfC,MAAO,EACPC,OAAQ,GAQHF,OANPA,EAASC,MAAQE,SACfC,KAAKC,UAAYR,SAASS,gBAAgBC,YAAcC,EAAOhB,QAAAA,YAAcgB,EAAOhB,QAAAA,YAEtFQ,EAASE,OAASC,SAChBC,KAAKC,UAAYR,SAASS,gBAAgBG,aAAeD,EAAOhB,QAAAA,YAAcgB,EAAOhB,QAAAA,YAEhFQ,EAGT,SAASU,IACPd,EAAOK,MAAQJ,SAASS,gBAAgBC,YACxCX,EAAOM,OAASL,SAASS,gBAAgBG,aAlB3Cb,EAAOe,MAAMC,gBAAkB,UAoB/BF,IAEAG,OAAOC,iBAAiB,SAAUJ,GAClC,MAAMK,EAASnB,EAAOoB,WAAW,MACjC,IAAIC,GAAU,EACd,MAAMC,EAAW,GACjB,SAASC,EAAWC,EAAS,GAAIC,EAAMtB,KACjCuB,IAAAA,EAAQd,EAAOb,QAAAA,UAWfyB,GAVAH,IACFI,EAAIrB,SAAW,QACfsB,EAAQd,EAAOf,QAAAA,eACfwB,GAAU,GAEG,IAAXG,IACFC,EAAIrB,SAAW,OAEfsB,EAAQd,EAAOd,QAAAA,eAEF,IAAX0B,EAAc,OAAO,EAEzBL,EAAOQ,YACPR,EAAOS,IAAIH,EAAIpB,MAAOoB,EAAInB,OAAQ,EAAG,EAAa,EAAVE,KAAKqB,IAC7CV,EAAOW,UAAYJ,EACnBP,EAAOY,OAEPN,EAAIO,QAAUzB,UAAUkB,EAAInB,OAASmB,EAAIpB,OAAS,GAClDoB,EAAIQ,QAAS,EACbX,EAASY,KAAKT,GAEdF,IAAaC,GAGfD,IACA,MAAMY,EAAQnC,EAAOoB,WAAW,MAEhC,SAASgB,EAAYd,GACbe,MAAAA,EAAS,IAAIf,GACbgB,EAAiB,CAACD,EAAO,IAEzBE,EAAgBC,IAChBA,QAAQC,IAARD,EAAmB,OAAO,EAC9BE,QAAQC,IAAIN,EAAOO,QAAQJ,IAC3BA,EAAIP,QAAS,EACTY,IAAAA,EAAO,KACPpB,EAAM,GACL,IAAA,IAAIqB,EAAI,EAAGA,EAAIxB,EAASyB,OAAS,EAAGD,IAErCtC,KAAKwC,IAAIR,EAAIR,QAAUK,EAAOS,GAAGd,SAAWa,IAC3CR,EAAOS,GAAGb,QACXa,GAAKxB,EAASyB,OAAS,IAEvBF,EAAOrC,KAAKwC,IAAIR,EAAIR,QAAUK,EAAOS,GAAGd,SACxCP,EAAMY,EAAOS,IAGjBJ,QAAQC,IAAIE,GACKJ,MAAbhB,EAAIpB,OAAoBiC,EAAeJ,KAAKT,GAChDc,EAAcF,EAAOA,EAAOO,QAAQnB,MAEtCc,EAAcF,EAAO,IACrBC,EAAeJ,KAAKG,EAAOA,EAAOU,OAAS,IACtC,IAAA,IAAID,EAAI,EAAGA,EAAIR,EAAeS,OAAS,EAAGD,IAC7CX,EAAMc,OAAOX,EAAeQ,GAAGzC,MAAOiC,EAAeQ,GAAGxC,QACxD6B,EAAMe,OAAOZ,EAAeQ,EAAI,GAAGzC,MAAOiC,EAAeQ,EAAI,GAAGxC,QAChE6B,EAAMgB,SAERT,QAAQC,IAAIN,GACZK,QAAQC,IAAIL,GAjCdH,EAAMR,YAoCNS,EAAYd","file":"src.7cb1918c.js","sourceRoot":"../src","sourcesContent":["module.exports={starRadius:3,firstStarColor:\"red\",lastStarColor:\"#DEA164\",starColor:\"#E4FBFF\"};","import './scss/main.scss';\nimport config from './config.json';\n\nconst canvas = document.querySelector('#canvas');\ncanvas.style.backgroundColor = '#111f28';\n\nfunction randomPosition() {\n  const position = {\n    width: 0,\n    height: 0,\n  };\n  position.width = parseInt(\n    Math.random() * (document.documentElement.clientWidth - config.starRadius) + config.starRadius,\n  );\n  position.height = parseInt(\n    Math.random() * (document.documentElement.clientHeight - config.starRadius) + config.starRadius,\n  );\n  return position;\n}\n\nfunction resizeCanvas() {\n  canvas.width = document.documentElement.clientWidth;\n  canvas.height = document.documentElement.clientHeight;\n}\nresizeCanvas();\n\nwindow.addEventListener('resize', resizeCanvas);\nconst circle = canvas.getContext('2d');\nlet isFirst = true;\nconst starsArr = [];\nfunction createDots(amount = 10, obj = randomPosition()) {\n  let color = config.starColor;\n  if (isFirst) {\n    obj.position = 'first';\n    color = config.firstStarColor;\n    isFirst = false;\n  }\n  if (amount === 1) {\n    obj.position = 'last';\n\n    color = config.lastStarColor;\n  }\n  if (amount === 0) return false;\n  // console.log(obj);\n  circle.beginPath();\n  circle.arc(obj.width, obj.height, 3, 0, Math.PI * 2);\n  circle.fillStyle = color;\n  circle.fill();\n\n  obj.average = parseInt((obj.height + obj.width) / 2);\n  obj.isUsed = false;\n  starsArr.push(obj);\n\n  createDots(--amount);\n}\n\ncreateDots();\nconst lines = canvas.getContext('2d');\nlines.beginPath();\nfunction createLines(starsArr) {\n  const newArr = [...starsArr];\n  const shortestWayArr = [newArr[0]];\n\n  const newCoordinate = now => {\n    if (now === undefined) return false;\n    console.log(newArr.indexOf(now));\n    now.isUsed = true;\n    let some = 9999;\n    let obj = {};\n    for (let i = 0; i < starsArr.length - 1; i++) {\n      if (\n        Math.abs(now.average - newArr[i].average) < some &&\n        !newArr[i].isUsed &&\n        i != starsArr.length - 1\n      ) {\n        some = Math.abs(now.average - newArr[i].average);\n        obj = newArr[i];\n      }\n    }\n    console.log(some);\n    if (obj.width != undefined) shortestWayArr.push(obj);\n    newCoordinate(newArr[newArr.indexOf(obj)]);\n  };\n  newCoordinate(newArr[0]);\n  shortestWayArr.push(newArr[newArr.length - 1]);\n  for (let i = 0; i < shortestWayArr.length - 1; i++) {\n    lines.moveTo(shortestWayArr[i].width, shortestWayArr[i].height);\n    lines.lineTo(shortestWayArr[i + 1].width, shortestWayArr[i + 1].height);\n    lines.stroke();\n  }\n  console.log(newArr);\n  console.log(shortestWayArr);\n}\n\ncreateLines(starsArr);\n"]}