{"version":3,"sources":["config.json","functions.js","index.js"],"names":["module","exports","starRadius","firstStarColor","lastStarColor","starColor","sky","dotted_line","star_amount","randomPosition","position","width","height","parseInt","Math","random","document","documentElement","clientWidth","config","clientHeight","createCanvas","canvas","querySelector","background","getContext","gradient","createLinearGradient","addColorStop","fillStyle","fillRect","resizeCanvas","window","addEventListener","star","strokeStyle","stroke","starsArr","isFirst","createDots","amount","obj","color","beginPath","arc","PI","fill","isUsed","push","createCoordinateArr","newArr","shortestWayArr","console","log","newCoordinate","now","undefined","some","sqrt","pow","i","length","hypotenuse","indexOf","createLines","lines","setLineDash","lineJoin","moveTo","lineTo"],"mappings":"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","file":"src.cc9b5b0c.js","sourceRoot":"../src","sourcesContent":["module.exports={starRadius:7,firstStarColor:\"#5C7FFC\",lastStarColor:\"#FFF06E\",starColor:\"#FCFCFC\",sky:\"#020204\",dotted_line:\"#CCCCCC\",star_amount:50};","import config from './config.json';\n\nexport function randomPosition() {\n  const position = {\n    width: 0,\n    height: 0,\n  };\n  position.width = parseInt(\n    Math.random() * (document.documentElement.clientWidth - config.starRadius) + config.starRadius,\n  );\n  position.height = parseInt(\n    Math.random() * (document.documentElement.clientHeight - config.starRadius) + config.starRadius,\n  );\n  return position;\n}\n","import './scss/main.scss';\nimport config from './config.json';\nimport { randomPosition } from './functions';\n\nconst createCanvas = () => {\n  const canvas = document.querySelector('#canvas');\n  canvas.width = document.documentElement.clientWidth;\n  canvas.height = document.documentElement.clientHeight;\n  const background = canvas.getContext('2d');\n\n  const gradient = background.createLinearGradient(\n    document.documentElement.clientWidth / 2,\n    document.documentElement.clientHeight,\n    document.documentElement.clientWidth / 2,\n    0,\n  );\n  gradient.addColorStop(0, '#15286C');\n  gradient.addColorStop(1, '#000316');\n\n  background.fillStyle = gradient;\n  background.fillRect(\n    0,\n    0,\n    document.documentElement.clientWidth,\n    document.documentElement.clientHeight,\n  );\n};\n\ncreateCanvas();\n\nfunction resizeCanvas() {\n  createCanvas();\n}\n\nwindow.addEventListener('resize', resizeCanvas);\n\nconst star = canvas.getContext('2d');\nstar.strokeStyle = '#red';\nstar.stroke();\nconst starsArr = [];\nlet isFirst = true;\n\nconst createDots = (amount = 10, obj = randomPosition()) => {\n  let color = config.starColor;\n  if (isFirst) {\n    obj.position = 'first';\n    color = config.firstStarColor;\n    isFirst = false;\n  }\n  if (amount === 1) {\n    obj.position = 'last';\n    color = config.lastStarColor;\n  }\n  if (amount === 0) return false;\n  star.beginPath();\n  star.arc(obj.width, obj.height, config.starRadius, 0, Math.PI * 2);\n  star.fillStyle = color;\n  star.fill();\n\n  obj.isUsed = false;\n  starsArr.push(obj);\n\n  createDots(--amount);\n};\n\ncreateDots(config.star_amount);\n\nconst createCoordinateArr = starsArr => {\n  const newArr = [...starsArr];\n  const shortestWayArr = [newArr[0]];\n  console.log(newArr);\n\n  const newCoordinate = now => {\n    if (now === undefined) return false;\n    now.isUsed = true;\n    let some = Math.sqrt(\n      Math.pow(document.documentElement.clientWidth, 2) +\n        Math.pow(document.documentElement.clientHeight, 2),\n    );\n    let obj = {};\n\n    for (let i = 0; i < starsArr.length - 1; i++) {\n      const hypotenuse = Math.sqrt(\n        Math.pow(now.width - newArr[i].width, 2) + Math.pow(now.height - newArr[i].height, 2),\n      );\n      if (hypotenuse < some && !newArr[i].isUsed && i != starsArr.length - 1) {\n        some = hypotenuse;\n        obj = newArr[i];\n      }\n    }\n    if (obj.width != undefined) shortestWayArr.push(obj);\n    newCoordinate(newArr[newArr.indexOf(obj)]);\n  };\n  newCoordinate(newArr[0]);\n\n  shortestWayArr.push(newArr[newArr.length - 1]);\n\n  createLines(shortestWayArr);\n};\n\nconst createLines = shortestWayArr => {\n  const lines = canvas.getContext('2d');\n  lines.setLineDash([7, 7]);\n  lines.lineJoin = 'round';\n  lines.strokeStyle = config.dotted_line;\n  lines.beginPath();\n  lines.moveTo(shortestWayArr[0].width, shortestWayArr[0].height);\n  for (let i = 0; i < shortestWayArr.length - 1; i++) {\n    lines.lineTo(shortestWayArr[i + 1].width, shortestWayArr[i + 1].height);\n    lines.stroke();\n  }\n};\ncreateCoordinateArr(starsArr);\n"]}